{"version":3,"sources":["App.js","custom-hooks/useFetch.js","index.js"],"names":["Button","keys","polluter","onClick","map","key","Modal","isVisible","content","onClose","keydownHandler","useEffect","document","addEventListener","removeEventListener","ModalContainer","ModalDialog","e","stopPropagation","ModalHeader","ModalClose","ModalBody","ModalContent","Title","styled","h1","appear","keyframes","slideIn","div","span","App","useState","isModal","setModal","response","url","setResponse","error","setError","a","fetch","res","json","fetchData","useFetch","console","log","Object","ReactDOM","render","StrictMode","getElementById"],"mappings":"g/DAIA,IAQMA,EAAS,SAAC,GAAsC,IAAD,IAAnCC,YAAmC,MAA5B,GAA4B,EAAxBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACrC,OAAOF,EAAKG,KAAI,SAACC,GACf,MAAY,SAARA,EACK,4BAAQF,QAASA,GAAUD,EAASG,IAEtC,SAILC,EAAQ,SAAC,GAA6C,IAAD,IAA1CC,iBAA0C,SAAvBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAM3C,SAASC,EAAT,GACE,OAD+B,EAAPL,KAEtB,IAAK,SACHI,KAMN,OAdAE,qBAAU,WAER,OADAC,SAASC,iBAAiB,UAAWH,GAC9B,kBAAME,SAASE,oBAAoB,UAAWJ,OAY/CH,EACN,kBAACQ,EAAD,CAAgBZ,QAASM,GACvB,kBAACO,EAAD,CAAab,QAAS,SAACc,GAAD,OAAOA,EAAEC,oBAC7B,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAYjB,QAASM,GAArB,SAEF,kBAACY,EAAD,KACE,kBAACC,EAAD,KAAed,MAPH,MA8ChBe,EAAQC,IAAOC,GAAV,KAILC,EAASC,YAAH,KASNC,EAAUD,YAAH,KASPZ,EAAiBS,IAAOK,IAAV,IAYAH,GAIdV,EAAcQ,IAAOK,IAAV,IAcGD,GAIdT,EAAcK,IAAOK,IAAV,KAQXT,EAAaI,IAAOM,KAAV,KAMVT,EAAYG,IAAOK,IAAV,KAITP,EAAeE,IAAOK,IAAV,KAIHE,EA9GH,WAAO,IAAD,EACYC,oBAAS,GADrB,mBACTC,EADS,KACAC,EADA,KAGRC,ECnDc,SAACC,GAAS,IAAD,EACCJ,mBAAS,MADV,mBACxBG,EADwB,KACdE,EADc,OAELL,mBAAS,MAFJ,mBAExBM,EAFwB,KAEjBC,EAFiB,KAkB/B,OAdA5B,qBAAU,YACO,uCAAG,8BAAA6B,EAAA,+EAEIC,MAAML,GAFV,cAERM,EAFQ,gBAIKA,EAAIC,OAJT,OAIRA,EAJQ,OAKdN,EAAYM,GALE,kDAOdJ,EAAS,EAAD,IAPM,0DAAH,qDAUfK,KACC,CAACR,IAEG,CAAED,WAAUG,SDiCEO,CAAS,mCAAtBV,SAIR,OAFAW,QAAQC,IAAI,UAAWd,GAGrB,oCACE,kBAACV,EAAD,6BACA,8BACKY,GACDA,EAAS/B,KAAI,SAACF,GACZ,IAAMD,EAAO+C,OAAO/C,KAAKC,GACzB,OACE,4BACG,IAED,kBAAC,EAAD,CACED,KAAMA,EACNC,SAAUA,EACVC,QAAS,kBAAM+B,GAAS,MAE1B,kBAAC,EAAD,CAAO3B,UAAW0B,EAASxB,QAAS,kBAAMyB,GAAS,aEpEnEe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvC,SAASwC,eAAe,W","file":"static/js/main.bbf4237e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { useFetch } from './custom-hooks';\n\nconst Card = ({ keys = [], polluter }) => {\n  return keys.map((key) => (\n    <span>\n      {key}: {polluter[key]}\n    </span>\n  ));\n};\n\nconst Button = ({ keys = [], polluter, onClick }) => {\n  return keys.map((key) => {\n    if (key === 'Name') {\n      return <button onClick={onClick}>{polluter[key]}</button>;\n    }\n    return null;\n  });\n};\n\nconst Modal = ({ isVisible = false, content, onClose }) => {\n  useEffect(() => {\n    document.addEventListener('keydown', keydownHandler);\n    return () => document.removeEventListener('keydown', keydownHandler);\n  });\n\n  function keydownHandler({ key }) {\n    switch (key) {\n      case 'Escape':\n        onClose();\n        break;\n      default:\n    }\n  }\n\n  return !isVisible ? null : (\n    <ModalContainer onClick={onClose}>\n      <ModalDialog onClick={(e) => e.stopPropagation()}>\n        <ModalHeader>\n          <ModalClose onClick={onClose}>&times;</ModalClose>\n        </ModalHeader>\n        <ModalBody>\n          <ModalContent>{content}</ModalContent>\n        </ModalBody>\n      </ModalDialog>\n    </ModalContainer>\n  );\n};\n\nconst App = () => {\n  const [isModal, setModal] = useState(false);\n\n  const { response } = useFetch('http://localhost:8080/polluters');\n\n  console.log('isModal', isModal);\n\n  return (\n    <>\n      <Title>Top twenty polluters</Title>\n      <ul>\n        {!!response &&\n          response.map((polluter) => {\n            const keys = Object.keys(polluter);\n            return (\n              <li>\n                {' '}\n                {/* <Card keys={keys} polluter={polluter} /> */}\n                <Button\n                  keys={keys}\n                  polluter={polluter}\n                  onClick={() => setModal(true)}\n                />\n                <Modal isVisible={isModal} onClose={() => setModal(false)} />\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nconst Title = styled.h1`\n  color: red;\n`;\n\nconst appear = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst slideIn = keyframes`\n  from {\n    transform: translateY(-150px);\n  }\n  to {\n    transform: translateY(0);\n  }\n`;\n\nconst ModalContainer = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  z-index: 9999;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.25);\n  animation-name: ${appear};\n  animation-duration: 300ms;\n`;\n\nconst ModalDialog = styled.div`\n  width: 100%;\n  max-width: 550px;\n  background: white;\n  position: relative;\n  margin: 0 20px;\n  max-height: calc(100vh - 40px);\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  -webkit-animation-name: animatetop;\n  -webkit-animation-duration: 0.4s;\n  animation-name: ${slideIn};\n  animation-duration: 0.5s;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  border-bottom: 1px solid #dbdbdb;\n  justify-content: space-between;\n`;\n\nconst ModalClose = styled.span`\n  cursor: pointer;\n  padding: 1rem;\n  margin: -1rem -1rem -1rem auto;\n`;\n\nconst ModalBody = styled.div`\n  overflow: auto;\n`;\n\nconst ModalContent = styled.div`\n  padding: 1rem;\n`;\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const useFetch = (url) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(url);\n\n        const json = await res.json();\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchData();\n  }, [url]);\n\n  return { response, error };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}